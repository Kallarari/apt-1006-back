// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de usuário para autenticação
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Modelo de estágios de negócio
model DealStage {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(100)
  position Int    @default(0)

  @@map("deal_stages")
}

// Modelo de negócios
model Business {
  id                    Int      @id @default(autoincrement())
  leadId               String?  @db.VarChar(50) @map("lead_id")
  propertyId           String?  @db.VarChar(50) @map("property_id")
  stageId              String?  @db.VarChar(50) @map("stage_id")
  title                String?  @db.VarChar(200)
  description          String?
  businessOrigin       String?  @db.VarChar(100) @map("business_origin")
  status               String?  @db.VarChar(50)
  estimatedMargin      Decimal? @db.Decimal(10, 2) @map("estimated_margin")
  closingValue         Decimal? @db.Decimal(10, 2) @map("closing_value")
  paymentMethod        String?  @db.VarChar(50) @map("payment_method")
  lossReason           String?  @map("loss_reason")
  commissionResponsible String? @db.VarChar(100) @map("commission_responsible")
  saleResponsible      String?  @db.VarChar(100) @map("sale_responsible")
  scheduledMeetings    Int?     @map("scheduled_meetings")
  timeInStage          Int?     @map("time_in_stage")
  expectedClosingDate  DateTime? @db.Date @map("expected_closing_date")
  documentPending      Boolean? @default(false) @map("document_pending")
  observation          String?
  createdBy            String?  @db.VarChar(100) @map("created_by")
  createdDate          DateTime @default(now()) @map("created_date")
  lastUpdated          DateTime @updatedAt @map("last_updated")

  // Relacionamento com leads
  leads                Lead[]

  @@map("business")
}

// Modelo de leads
model Lead {
  id                      Int      @id @default(autoincrement())
  businessId              Int?     @map("business_id")
  leadStatus              String?  @db.VarChar(50) @map("lead_status")
  firstName               String?  @db.VarChar(100) @map("first_name")
  lastName                String?  @db.VarChar(100) @map("last_name")
  email                   String?  @db.VarChar(150)
  cpfCnpj                 String?  @db.VarChar(20) @map("cpf_cnpj")
  phone                   String?  @db.VarChar(20)
  phone2                  String?  @db.VarChar(20) @map("phone_2")
  personType              String?  @db.VarChar(10) @map("person_type")
  deviceUsed              String?  @db.VarChar(100) @map("device_used")
  campaignId              String?  @db.VarChar(50) @map("campaign_id")
  photoUrl                String?  @map("photo_url")
  interestReason          String?  @map("interest_reason")
  estimatedAverageTicket  Decimal? @db.Decimal(10, 2) @map("estimated_average_ticket")
  entryDate               DateTime @default(now()) @map("entry_date")
  lastLogin               DateTime @default(now()) @map("last_login")

  // Relacionamento com business
  business                Business? @relation(fields: [businessId], references: [id])

  @@map("leads")
}

// Modelo de campanhas de marketing
model Campaign {
  id              Int      @id @default(autoincrement())
  channel         String   @db.VarChar(100)
  totalBudget     Decimal? @db.Decimal(15, 2) @map("total_budget")
  redirectUrl     String?  @db.VarChar(500) @map("redirect_url")
  startDate       DateTime? @db.Date @map("start_date")
  campaignType    String?  @db.VarChar(100) @map("campaign_type")
  title           String   @db.VarChar(255)
  description     String?
  status          String?  @db.VarChar(50)
  responsibleName String?  @db.VarChar(200) @map("responsible_name")
  dailyBudget     Decimal? @db.Decimal(15, 2) @map("daily_budget")
  webhookUrl      String?  @db.VarChar(500) @map("webhook_url")
  costPerClick    Decimal? @db.Decimal(10, 4) @map("cost_per_click")
  clicksToDate    Int?     @map("clicks_to_date")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("campaigns")
  @@unique([title])
}

// Histórico de alterações de Business
model BusinessHistory {
  id          Int      @id @default(autoincrement())
  businessId  Int      @map("business_id")
  field       String   @db.VarChar(100)
  oldValue    Json?    @map("old_value")
  newValue    Json?    @map("new_value")
  changedBy   Int?     @map("changed_by")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("business_history")
  @@index([businessId])
  @@index([createdAt])
}

// Arquivos enviados para armazenamento externo (Google Cloud Storage)
model File {
  id           BigInt   @id @default(autoincrement())
  publicUrl    String   @map("public_url")
  documentType String?  @db.VarChar(50) @map("document_type")
  createdAt    DateTime @default(now()) @map("created_at")
  deletedAt    DateTime? @map("deleted_at")
  uploadedBy   BigInt   @map("uploaded_by")
  deletedBy    BigInt?  @map("deleted_by")

  @@map("files")
  @@index([uploadedBy])
}
